GHI_UTF_IBCOrderProcessing.createOrder();
GHI_UTF_IBCOrderProcessing.createOrderRole('Ordering');
GHI_UTF_IBCOrderProcessing.createOrderRole('Specimen Submitting');
GHI_UTF_IBCOrderProcessing.processOrder($orderId);
System.debug('cicd processing 1');
GHI_UTF_IBCOrderProcessing.closePreBillingCase($orderId);
GHI_UTF_IBCOrderProcessing.createPackage($orderId);
GHI_UTF_IBCOrderProcessing.closeSpecArrivalCase($orderId);
GHI_UTF_IBCOrderProcessing.createSpecimen($orderId);
GHI_UTF_IBCOrderProcessing.createResult($orderId);
GHI_UTF_IBCOrderProcessing.updateOLIToDVC($orderId);
System.debug('cicd processing 2');
GHI_UTF_IBCOrderProcessing.createDistributionEvent($orderId);
List<OrderItem> olis = [Select Id, OrderItemNumber from OrderItem where OrderId = :$orderId];
System.debug('cicd processing 3'+olis);
String oliNumber = olis[0].OrderItemNumber;
System.debug('cicd processing 4'+oliNumber);
Order ord = [Select Id, OrderNumber from Order where Id = :$orderId];
System.debug('cicd processing 5'+ord);
List<ICRT_Message_Log__c> icrtLogsODM = [Select Id, ICRT_Message_Direction__c, ICRT_Object_ID__c, ICRT_Message_Type__c from ICRT_Message_Log__c where (ICRT_Message_Type__c ='OrderDataMessage' or ICRT_Message_Type__c='BillingDataMessage' or ICRT_Message_Type__c='RenderAndDistributeDataMessage')and (ICRT_Object_ID__c like :ord.OrderNumber or ICRT_Object_ID__c like :oliNumber)];
System.debug('cicd processing 6'+icrtLogsODM.size());
System.assert(icrtLogsODM.size()>3);
